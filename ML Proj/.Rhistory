library(readr)
default_of_credit_card_clients <- read_csv("C:/Dileep/DataScience MS at UTD/Spring 2017/R/Assignments/7/default of credit card clients.csv")
View(default_of_credit_card_clients)
myData <- default_of_credit_card_clients
myData <- myData[-c(1,8,9,11,12,14,15,16,17,18)]
View(myData)
summary(myData)
myData$target <- as.factor(myData$target)
myData[,3] <- ifelse(myData[,3]==5,4, myData[,3])
myData[,3] <- ifelse(myData[,3]==6,4, myData[,3])
library(corrplot)
p <- cor(myData)
corrplot(p,method = "circle")
myData <- myData[-c(1,8,9,11,12,14,15,16,17,18)]
myData <- default_of_credit_card_clients
myData <- myData[-c(1,8,9,11,12,14,15,16,17,18)]
summary(myData)
myData[,3] <- ifelse(myData[,3]==5,4, myData[,3])
myData[,3] <- ifelse(myData[,3]==6,4, myData[,3])
library(corrplot)
p <- cor(myData)
corrplot(p,method = "circle")
library(randomForest)
set.seed(9)
fold <- 10;
id <- sample(1:fold, nrow(myData), replace = TRUE);
list <- 1:fold;
TestAccuracy <- 0;
precisionRF <- 0;
recallRF <- 0;
for (i in 1:fold) {
myDataTrain  <- subset(myData, id %in% list[-i]);
myDataTest <- subset(myData, id %in% c(i));
rfModel <- randomForest(as.factor(target)~., myDataTrain, importance = FALSE, ntree=300, proximity = TRUE);
predRandomForestTesting <- predict(rfModel, myDataTest);
TestRandomTable <- table(predRandomForestTesting, myDataTest$target);
TestAccuracy <- TestAccuracy + sum(diag(TestRandomTable))/sum(TestRandomTable);
precisionRF <- precisionRF + diag(TestRandomTable)/rowSums(TestRandomTable)
precisionRF <- mean(precisionRF)
recallRF <- recallRF + diag(TestRandomTable)/colSums(TestRandomTable)
recallRF <- mean(recallRF)
}
myDataTrain  <- sample(30000,24000);
rfModel <- randomForest(as.factor(target)~., myDataTrain, importance = FALSE, ntree=300, proximity = TRUE);
rfModel <- randomForest(as.factor(target)~., myData, subset = myDataTrain, importance = FALSE, ntree=300, proximity = TRUE);
rfModel <- randomForest(as.factor(target)~., myData, subset = myDataTrain, importance = FALSE, proximity = TRUE);
